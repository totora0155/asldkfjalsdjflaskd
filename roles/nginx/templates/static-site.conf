user {{nginx.user | default(nginx)}};
worker_processes {{nginx.worker_process | default(1)};

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  ltsv  'domain:$host\t'
                      'host:$remote_addr\t'
                      'user:$remote_user\t'
                      'time:$time_local\t'
                      'method:$request_method\t'
                      'path:$request_uri\t'
                      'protocol:$server_protocol\t'
                      'status:$status\t'
                      'size:$body_bytes_sent\t'
                      'referer:$http_referer\t'
                      'agent:$http_user_agent\t'
                      'response_time:$request_time\t'
                      'cookie:$http_cookie\t'
                      'set_cookie:$sent_http_set_cookie\t'
                      'upstream_addr:$upstream_addr\t'
                      'upstream_cache_status:$upstream_cache_status\t'
                      'upstream_response_time:$upstream_response_time';

    pid /var/log/nginx.pid;
    access_log /var/log/nginx/access.log ltsv;
    error_log /var/log/error.log;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  {{nginx.keepalive_timeout | default(60)}};

    # read conf.d/*
    # include /etc/nginx/conf.d/*.conf;

    upstream backend {
        server 127.0.0.1:{{nginx.backend_port | default(5510)}};
    }

    server {
	      server_name {{nginx.domain | mandatory}};
        if ($hostname = "") {
  	      #return 301 $scheme://www.{{nginx.domain | mandatory}}$request_uri;
        }
    }

    server {
        listen {{nginx.port | defualt(80)}};
        listen [::]:{{nginx.port | default(80)}};
        server_name  ~^(?<name>.+)\.{{nginx.domain | mandatory | regex_escape()}}$;
      	index {{nginx.index | default(index.html)}};

      	gzip on;
      	gzip_types text/css text/javascript;
      	gzip_static always;
      	gunzip on;
      	expires 30d;
      	open_file_cache max=100 inactive=10s;

        access_log /var/log/www.nju33.work.access.log ltsv;
        error_page 404 /404.html;

      	location / {
        		root {{nginx.location_path | mandatory}}/$name.{{nginx.domain | mandatory}};

            #if ( -f $request_filename ) {
            #    break;
            #}

        		#if ($request_filename ~* ^.*/.+\.(.*)$) {
        		#	set $filename $1;
        		#}
            #if ($filename ~* eot|ttf|woff|svg|otf) {
            #    add_header Access-Control-Allow-Origin *;
            #}

        		if ($request_filename ~* ^.*?\. (eot)|(ttf)|(woff)|(svg)|(otf)$) {
        			add_header Access-Control-Allow-Origin *;
        		}
      	}

        #location /search {
    	  #    proxy_set_header Host $http_host;
    	  #    proxy_set_header X-Real-IP $remote_addr;
    	  #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	  #    proxy_set_header X-NginX-Proxy true;
        #
    	  #    proxy_pass http://backend/;
    	  #    proxy_redirect off;
        #}

        error_page 400 /400.html;
        location = /400.html {
            root /usr/share/nginx/html;
        }

        error_page 401 /401.html;
        location = /401.html {
            root /usr/share/nginx/html;
        }

        error_page 403
        location = /403.html {
            root /usr/share/nginx/html;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }


    ##another virtual host using mix of IP-, name-, and port-based configuration
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    ##HTTPS server
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
    #
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;
    #
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;
    #
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;
    #
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
